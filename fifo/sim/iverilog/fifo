#! /usr/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision - 9;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x240fd00 .scope module, "fifo_tb" "fifo_tb" 2 2;
 .timescale -9 -9;
v0x2455b50_0 .var "clk", 0 0;
v0x2455bf0_0 .var "clr", 0 0;
v0x2455ca0_0 .var "din", 7 0;
v0x2455d50_0 .net "dout", 7 0, v0x2455380_0; 1 drivers
v0x2455e30_0 .net "empty", 0 0, L_0x2456400; 1 drivers
v0x2455ee0_0 .net "full", 0 0, L_0x24562d0; 1 drivers
v0x2455f60_0 .net "halt", 0 0, L_0x24565d0; 1 drivers
v0x2456010_0 .var/i "i", 31 0;
v0x2456090_0 .var "rd", 0 0;
v0x2456140_0 .var "rst", 0 0;
v0x24561f0_0 .var "wr", 0 0;
E_0x2423730 .event posedge, v0x24550b0_0;
S_0x240f6e0 .scope module, "u0" "fifo" 2 15, 3 1, S_0x240fd00;
 .timescale 0 0;
v0x24241f0_0 .net *"_s0", 3 0, C4<1111>; 1 drivers
v0x2454f70_0 .net *"_s4", 3 0, C4<0000>; 1 drivers
v0x2455010_0 .net *"_s8", 3 0, C4<0111>; 1 drivers
v0x24550b0_0 .net "clk", 0 0, v0x2455b50_0; 1 drivers
v0x2455160_0 .net "clr", 0 0, v0x2455bf0_0; 1 drivers
v0x2455200_0 .var "cnt", 3 0;
v0x24552e0_0 .net "din", 7 0, v0x2455ca0_0; 1 drivers
v0x2455380_0 .var "dout", 7 0;
v0x2455470_0 .alias "empty", 0 0, v0x2455e30_0;
v0x2455510_0 .alias "full", 0 0, v0x2455ee0_0;
v0x2455610_0 .alias "halt", 0 0, v0x2455f60_0;
v0x24556b0 .array "mem", 0 15, 7 0;
v0x24557a0_0 .net "rd", 0 0, v0x2456090_0; 1 drivers
v0x2455840_0 .var "read_ptr", 3 0;
v0x2455960_0 .net "rst", 0 0, v0x2456140_0; 1 drivers
v0x2455a00_0 .net "wr", 0 0, v0x24561f0_0; 1 drivers
v0x24558c0_0 .var "write_ptr", 3 0;
E_0x24240c0 .event posedge, v0x2455960_0, v0x24550b0_0;
L_0x24562d0 .cmp/eq 4, v0x2455200_0, C4<1111>;
L_0x2456400 .cmp/eq 4, v0x2455200_0, C4<0000>;
L_0x24565d0 .cmp/eq 4, v0x2455200_0, C4<0111>;
    .scope S_0x240f6e0;
T_0 ;
    %wait E_0x24240c0;
    %load/v 8, v0x2455960_0, 1;
    %jmp/0xz  T_0.0, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455200_0, 0, 0;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455840_0, 0, 0;
    %ix/load 0, 4, 0;
    %assign/v0 v0x24558c0_0, 0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0x2455160_0, 1;
    %jmp/0xz  T_0.2, 8;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455200_0, 0, 0;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455840_0, 0, 0;
    %ix/load 0, 4, 0;
    %assign/v0 v0x24558c0_0, 0, 0;
    %jmp T_0.3;
T_0.2 ;
    %load/v 8, v0x2455a00_0, 1;
    %load/v 9, v0x24557a0_0, 1;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 3, 2;
    %jmp/1 T_0.6, 6;
    %jmp T_0.7;
T_0.4 ;
    %load/v 8, v0x2455470_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_0.8, 8;
    %ix/getv 3, v0x2455840_0;
    %load/av 8, v0x24556b0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x2455380_0, 0, 8;
    %load/v 8, v0x2455840_0, 4;
    %cmpi/u 8, 15, 4;
    %mov 8, 4, 1;
    %jmp/0  T_0.10, 8;
    %mov 9, 0, 4;
    %jmp/1  T_0.12, 8;
T_0.10 ; End of true expr.
    %ix/load 0, 1, 0;
    %load/vp0 13, v0x2455840_0, 4;
    %jmp/0  T_0.11, 8;
 ; End of false expr.
    %blend  9, 13, 4; Condition unknown.
    %jmp  T_0.12;
T_0.11 ;
    %mov 9, 13, 4; Return false value
T_0.12 ;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455840_0, 0, 9;
    %load/v 8, v0x2455200_0, 4;
    %subi 8, 1, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455200_0, 0, 8;
T_0.8 ;
    %jmp T_0.7;
T_0.5 ;
    %load/v 8, v0x2455510_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_0.13, 8;
    %load/v 8, v0x24552e0_0, 8;
    %ix/getv 3, v0x24558c0_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x24556b0, 0, 8;
t_0 ;
    %load/v 8, v0x24558c0_0, 4;
    %cmpi/u 8, 15, 4;
    %mov 8, 4, 1;
    %jmp/0  T_0.15, 8;
    %mov 9, 0, 4;
    %jmp/1  T_0.17, 8;
T_0.15 ; End of true expr.
    %ix/load 0, 1, 0;
    %load/vp0 13, v0x24558c0_0, 4;
    %jmp/0  T_0.16, 8;
 ; End of false expr.
    %blend  9, 13, 4; Condition unknown.
    %jmp  T_0.17;
T_0.16 ;
    %mov 9, 13, 4; Return false value
T_0.17 ;
    %ix/load 0, 4, 0;
    %assign/v0 v0x24558c0_0, 0, 9;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x2455200_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455200_0, 0, 8;
T_0.13 ;
    %jmp T_0.7;
T_0.6 ;
    %load/v 8, v0x24552e0_0, 8;
    %ix/getv 3, v0x24558c0_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x24556b0, 0, 8;
t_1 ;
    %load/v 8, v0x24558c0_0, 4;
    %cmpi/u 8, 15, 4;
    %mov 8, 4, 1;
    %jmp/0  T_0.18, 8;
    %mov 9, 0, 4;
    %jmp/1  T_0.20, 8;
T_0.18 ; End of true expr.
    %ix/load 0, 1, 0;
    %load/vp0 13, v0x24558c0_0, 4;
    %jmp/0  T_0.19, 8;
 ; End of false expr.
    %blend  9, 13, 4; Condition unknown.
    %jmp  T_0.20;
T_0.19 ;
    %mov 9, 13, 4; Return false value
T_0.20 ;
    %ix/load 0, 4, 0;
    %assign/v0 v0x24558c0_0, 0, 9;
    %load/v 8, v0x2455840_0, 4;
    %cmpi/u 8, 15, 4;
    %mov 8, 4, 1;
    %jmp/0  T_0.21, 8;
    %mov 9, 0, 4;
    %jmp/1  T_0.23, 8;
T_0.21 ; End of true expr.
    %ix/load 0, 1, 0;
    %load/vp0 13, v0x2455840_0, 4;
    %jmp/0  T_0.22, 8;
 ; End of false expr.
    %blend  9, 13, 4; Condition unknown.
    %jmp  T_0.23;
T_0.22 ;
    %mov 9, 13, 4; Return false value
T_0.23 ;
    %ix/load 0, 4, 0;
    %assign/v0 v0x2455840_0, 0, 9;
    %ix/getv 3, v0x2455840_0;
    %load/av 8, v0x24556b0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x2455380_0, 0, 8;
    %jmp T_0.7;
T_0.7 ;
T_0.3 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x240fd00;
T_1 ;
    %delay 10, 0;
    %load/v 8, v0x2455b50_0, 1;
    %inv 8, 1;
    %set/v v0x2455b50_0, 8, 1;
    %jmp T_1;
    .thread T_1;
    .scope S_0x240fd00;
T_2 ;
    %set/v v0x2456010_0, 0, 32;
    %set/v v0x2455b50_0, 0, 1;
    %set/v v0x2456140_0, 0, 1;
    %set/v v0x2455bf0_0, 0, 1;
    %set/v v0x2456090_0, 0, 1;
    %set/v v0x24561f0_0, 0, 1;
    %delay 1000, 0;
    %set/v v0x2456140_0, 1, 1;
    %delay 100, 0;
    %set/v v0x2456140_0, 0, 1;
    %delay 1000, 0;
    %set/v v0x2455bf0_0, 1, 1;
    %delay 100, 0;
    %set/v v0x2455bf0_0, 0, 1;
    %set/v v0x24561f0_0, 1, 1;
T_2.0 ;
    %load/v 8, v0x2455ee0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_2.1, 8;
    %load/v 8, v0x2456010_0, 32;
    %set/v v0x2455ca0_0, 8, 8;
    %wait E_0x2423730;
    %vpi_call 2 39 "$display", "wirte %d to position(%d)\012", v0x2455ca0_0, v0x24558c0_0;
    %load/v 8, v0x2456010_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x2456010_0, 8, 32;
    %jmp T_2.0;
T_2.1 ;
    %set/v v0x24561f0_0, 0, 1;
    %set/v v0x2456090_0, 1, 1;
T_2.2 ;
    %load/v 8, v0x2455e30_0, 1;
    %inv 8, 1;
    %jmp/0xz T_2.3, 8;
    %wait E_0x2423730;
    %vpi_call 2 47 "$display", "read %d form position(%d)\012", v0x2455d50_0, v0x2455840_0;
    %jmp T_2.2;
T_2.3 ;
    %set/v v0x2456090_0, 0, 1;
    %set/v v0x2455bf0_0, 0, 1;
    %set/v v0x2456010_0, 0, 32;
    %delay 1000, 0;
    %set/v v0x24561f0_0, 1, 1;
T_2.4 ;
    %load/v 8, v0x2456010_0, 32;
   %cmpi/s 8, 3, 32;
    %or 5, 4, 1;
    %jmp/0xz T_2.5, 5;
    %load/v 8, v0x2456010_0, 32;
    %set/v v0x2455ca0_0, 8, 8;
    %wait E_0x2423730;
    %vpi_call 2 58 "$display", "wirte %d to position(%d)\012", v0x2455ca0_0, v0x24558c0_0;
    %load/v 8, v0x2456010_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x2456010_0, 8, 32;
    %jmp T_2.4;
T_2.5 ;
    %set/v v0x2456090_0, 1, 1;
T_2.6 ;
    %load/v 8, v0x2456010_0, 32;
   %cmpi/s 8, 10, 32;
    %or 5, 4, 1;
    %jmp/0xz T_2.7, 5;
    %load/v 8, v0x2456010_0, 32;
    %set/v v0x2455ca0_0, 8, 8;
    %wait E_0x2423730;
    %vpi_call 2 66 "$display", "wirte %d to position(%d)\012", v0x2455ca0_0, v0x24558c0_0;
    %vpi_call 2 67 "$display", "read %d form position(%d)\012", v0x2455d50_0, v0x2455840_0;
    %load/v 8, v0x2456010_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x2456010_0, 8, 32;
    %jmp T_2.6;
T_2.7 ;
    %vpi_call 2 70 "$finish";
    %end;
    .thread T_2;
    .scope S_0x240fd00;
T_3 ;
    %wait E_0x2423730;
    %load/v 8, v0x2455e30_0, 1;
    %load/v 9, v0x2456090_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.0, 8;
    %vpi_call 2 75 "$display", "error read:operation read while fifo is empty\012";
    %jmp T_3.1;
T_3.0 ;
    %load/v 8, v0x2455ee0_0, 1;
    %load/v 9, v0x24561f0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.2, 8;
    %vpi_call 2 77 "$display", "error write:operation write while fifo is full\012";
T_3.2 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x240fd00;
T_4 ;
    %vpi_call 2 83 "$dumpfile", "../out/fifo.vcd";
    %vpi_call 2 84 "$dumpvars";
    %end;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "../../bench/fifo_tb.v";
    "../../rtl/fifo.v";
